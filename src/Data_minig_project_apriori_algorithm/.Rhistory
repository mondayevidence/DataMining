rules <- apriori(groceries)
rules <- apriori(Groc, parameter = list(support =.001, conf = .001) )
inspect(rules[1:10])
library(arules)
library(arulesViz)
#changing our data to transactional data
Groc <- read.transactions(file.choose(), sep = "\t",header = TRUE)
View(Groc)
str(Groc)
#how to invoke the apriori algorithm
gr_rules <- apriori(Groc)
#how to specify the parameter values for our dataset
gr_rules <- apriori(Groc, parameter = list(support =.001, conf = .001) )
inspect(gr_rules[1:10])
inspect(head(sort(rules, by="lift"), 10))
#how to specify the parameter values for our dataset
gr_rules <- apriori(Groc, parameter = list(support =.001, conf = .001) )
rules <- apriori(Groc, parameter = list(support =.001, conf = .001) )
inspect(head(sort(rules, by="lift"), 10))
rules <- apriori(Groc, parameter = list(support =.001, conf = .005) )
inspect(head(sort(rules, by="lift"), 10))
gr_rules <- apriori(Groc, parameter = list(minlen=2, maxlen=3, supp=.001, conf=.01),
appearance = list(rhs=c("beer"), default="lhs")
)
gr_rules <- apriori(Groc, parameter = list(minlen=2, maxlen=3, supp=.001, conf=.01),
appearance = list(rhs=c("bottled beer"), default="lhs")
)
inspect(gr_rules[1:10])
gr_rules <- apriori(Groc, parameter = list(minlen=2, maxlen=3, supp=.001, conf=.001),
appearance = list(rhs=c("bottled beer"), default="lhs")
)
gr_rules <- apriori(Groc, parameter = list(minlen=2, maxlen=3, supp=.0001, conf=.001),
appearance = list(rhs=c("bottled beer"), default="lhs")
)
gr_rules <- apriori(Groc, parameter = list(minlen=2, maxlen=3, supp=.0001, conf=.0001),
appearance = list(rhs=c("bottled beer"), default="lhs")
)
gr_rules <- apriori(Groc, parameter = list(minlen=1, maxlen=3, supp=.0001, conf=.0001),
appearance = list(rhs=c("bottled beer"), default="lhs")
)
inspect(gr_rules[1:1])
gr_rules <- apriori(Groc, parameter = list(minlen=1, maxlen=3, supp=.0001, conf=.0001),
appearance = list(rhs=c("bottled beer") )
)
inspect(gr_rules[1:1])
inspect(gr_rules[1:1])
gr_rules <- apriori(Groc, parameter = list(minlen=1, maxlen=3, supp=.0001, conf=.0001),
appearance = list(lhs=c("bottled beer"),default="rhs" )
)
inspect(gr_rules[1:10])
gr_rules <- apriori(Groc, parameter = list(minlen=1, maxlen=3, supp=.01, conf=.01),
appearance = list(lhs=c("bottled beer"),default="rhs" )
)
inspect(gr_rules[1:4])
)
gr_rules <- apriori(Groc, parameter = list(minlen=1, maxlen=3, supp=.01, conf=.02),
appearance = list(lhs=c("bottled beer"),default="rhs" )
)
inspect(gr_rules[1:1])
gr_rules <- apriori(Groc, parameter = list(minlen=1, maxlen=3, supp=.01, conf=.001),
appearance = list(lhs=c("bottled beer"),default="rhs" )
)
inspect(gr_rules[1:4])
gr_rules <- apriori(Groc, parameter = list(minlen=1, maxlen=3, supp=.01, conf=.001),
appearance = list(lhs=c("soda"),default="rhs" )
)
inspect(gr_rules[1:4])
gr_rules <- apriori(Groc, parameter = list(minlen=1, maxlen=1, supp=.01, conf=.001),
appearance = list(lhs=c("soda"),default="rhs" )
)
inspect(gr_rules[1:4])
gr_rules <- apriori(Groc, parameter = list(minlen=1, maxlen=1, supp=.01, conf=.001),
appearance = list(lhs=c("soda"),default="rhs" )
)
inspect(gr_rules[1:4])
gr_rules <- apriori(Groc, parameter = list(minlen=1, maxlen=1, supp=.001, conf=.001),
appearance = list(lhs=c("soda"),default="rhs" )
)
inspect(gr_rules[1:10])
library(arules)
library(arulesViz)
library(readr)
#changing our data to transactional data
my_groceries <- read.transactions(file.choose(), sep = "\t",header = TRUE)
summary(my_groceries)
#how to invoke the apriori algorithm
groc_rules <- apriori(my_groceries)
groc_rules <- apriori(my_groceries, parameter = list(support =.001, conf = .005) )
inspect(head(sort(rules, by="lift"), 10))
#changing our data to transactional data
my_groceries <- read.transactions(file.choose(), sep = "\t",header = TRUE, col=NULL)
#changing our data to transactional data
my_groceries <- read.transactions(file.choose(), sep = "\t",header = TRUE, col=NULL)
#changing our data to transactional data
my_groceries <- read.transactions(file.choose(), sep = "\t",header = TRUE, col=NULL)
View(my_groceries)
str(my_groceries)
View(my_groceries)
str(my_groceries)
summary(my_groceries)
#how to invoke the apriori algorithm
groc_rules <- apriori(my_groceries)
groc_rules <- apriori(my_groceries, parameter = list(support =.001, conf = .005) )
inspect(head(sort(rules, by="lift"), 10))
######
my_basket <- apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.001,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("soda","yogurt"), default ="lhs"))
inspect(my_basket[1:10])
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(milk_beef[1:10])
inspect(milk_beef[1:10])
inspect(sort(sort(milk_bee, by ="support"),by ="confidence")[1:5])
inspect(sort(sort(milk_beef, by ="support"),by ="confidence")[1:5])
inspect(head(sort(milk_beef, by ="lift"),5))
library(arules)
library(arulesViz)
library(readr)
#changing our data to transactional data
my_groceries <- read.transactions(file.choose(), sep = "\t",header = TRUE, col=NULL)
View(my_groceries)
str(my_groceries)
summary(my_groceries)
#create your own rule
my_basket <- apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.001,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("soda","yogurt"), default ="lhs"))
inspect(my_basket[1:20])
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(milk_beef[1:10])
library(arules)
library(arulesViz)
library(readr)
#changing our data to transactional data
my_groceries <- read.transactions(file.choose(), sep = "\t",header = TRUE, col=NULL)
View(my_groceries)
str(my_groceries)
summary(my_groceries)
#create your own rule
my_basket <- apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.001,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("soda","yogurt"), default ="lhs"))
inspect(my_basket[1:20])
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(milk_beef[1:10])
#sort by lift
inspect(head(sort(milk_beef, by ="lift"),5))
#sort by support and confidence
inspect(sort(sort(milk_beef, by ="support"),by ="confidence")[1:5])
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(milk_beef[1:10])
inspect(milk_beef[1:5])
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(milk_beef[1:10])
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.0545, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(milk_beef[1:2])
inspect(milk_beef[1:3])
library(arules)
library(arulesViz)
library(readr)
#changing our data to transactional data
my_groceries <- read.transactions(file.choose(), sep = "\t",header = TRUE, col=NULL)
View(my_groceries)
str(my_groceries)
summary(my_groceries)
gen_rules <-apriori(my_groceries)
gen_rules <-apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.001,
target="rules",minlen=2, maxlen=3))
gen_rules <-apriori(my_groceries, parameter = list(sup = 0.05, conf = 0.01,
target="rules",minlen=2, maxlen=3))
gen_rules <-apriori(my_groceries, parameter = list(sup = 0.05, conf = 0.01,
target="rules",minlen=2, maxlen=5))
inspect(gen_rules[1:5])
gen_rules <-apriori(my_groceries, parameter = list(sup = 0.04, conf = 0.01,
target="rules",minlen=2, maxlen=5))
inspect(gen_rules[1:12])
inspect(sort(sort(gen_rules, by ="support"),by ="confidence")[1:12])
#rules for vegetables
vegetables <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
ve
#rules for vegetables
vegetables <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
#rules for vegetables
vegetables <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.2,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(head(sort(vegetables, by ="lift"),4))
#rules for vegetables
#rules for vegetables
#rules for vegetables
vegetables <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.2,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("other vegetables"), default ="lhs"))
#rules for vegetables
vegetables <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.1,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("other vegetables"), default ="lhs"))
inspect(head(sort(vegetables, by ="lift"),2))
#rules/buns
buns <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.1,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("rolls/buns"), default ="lhs"))
inspect(head(sort(vegetables, by ="lift"),1))
inspect(head(sort(buns, by ="lift"),1))
#rules/buns
buns <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.1,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("rolls/buns"), default ="lhs"))
inspect(head(sort(buns, by ="lift"),1))
#soda
soda <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.1,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("soda"), default ="lhs"))
#soda
soda <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.01,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("soda"), default ="lhs"))
#soda
soda <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.001,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("soda"), default ="lhs"))
#yogurt
yogurt <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.001,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("yogurt"), default ="lhs"))
inspect(head(sort(yogurt, by ="lift"),1))
#soda
soda <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.001,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("soda"), default ="lhs"))
s
#soda
soda <- apriori(my_groceries, parameter = list(sup = 0.0545, conf = 0.001,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("soda"), default ="lhs"))
#soda
soda <- apriori(my_groceries, parameter = list(sup = 0.0245, conf = 0.001,
target="rules",minlen=2, maxlen=5),
appearance = list(rhs=c("soda"), default ="lhs"))
inspect(head(sort(soda, by ="lift"),5))
library(arules)
library(arulesViz)
library(readr)
#changing our data to transactional data
my_groceries <- read.transactions(file.choose(), sep = "\t",header = TRUE, col=NULL)
View(my_groceries)
str(my_groceries)
summary(my_groceries)
#code that counts lists the most frequent items
itms <- itemFrequency(my_groceries, type="absolute")
head(sort(itms, decreasing = TRUE), n=20)
head(sort(itms, decreasing = TRUE), n=50)
#create your own rule
my_basket <- apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.001,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("soda","yogurt"), default ="lhs"))
inspect(my_basket[1:20])
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(milk_beef[1:10])
#sort by lift
inspect(head(sort(milk_beef, by ="lift"),5))
####rule for other vegetables
vegetables <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("other vegetables"), default ="lhs"))
inspect(vegetables[1:10])
#sort by lift
inspect(head(sort(vegetables, by ="lift"),5))
#create your own rule
my_basket <- apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.001,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("soda","yogurt"), default ="lhs"))
inspect(my_basket[1:20])
inspect(head(sort(my_basket, by ="lift"),5))
inspect(head(sort(my_basket, by ="lift"),10))
head(sort(itms, decreasing = TRUE), n=50)
###root vegetables
root_vegetables <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("root vegetables"), default ="lhs"))
inspect(root_vegetables[1:10])
#sort by lift
inspect(head(sort(root_vegetables, by ="lift"),5))
##tropical fruit
tropical <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("tropical fruit"), default ="lhs"))
inspect(tropical [1:10])
#sort by lift
inspect(head(sort(tropical, by ="lift"),5))
###bottled water
water  <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("bottled water "), default ="lhs"))
###bottled water
water  <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("bottled water"), default ="lhs"))
inspect(water  [1:10])
#sort by lift
inspect(head(sort(water , by ="lift"),5))
###rolls burns
rolls/buns  <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("rolls/buns "), default ="lhs"))
###rolls burns
rolls/buns  <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("rolls/buns"), default ="lhs"))
###rolls burns
rolls/buns  <- apriori(my_groceries, parameter = list(sup = 0.045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("rolls/buns"), default ="lhs"))
###rolls burns
rolls/buns  <- apriori(my_groceries, parameter = list(sup = 0.0145, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("rolls/buns"), default ="lhs"))
inspect(rolls/buns [1:10])
inspect(rolls/buns[1:10])
###rolls burns
buns  <- apriori(my_groceries, parameter = list(sup = 0.0145, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("rolls/buns"), default ="lhs"))
inspect(buns[1:10])
###rule for beef
vegetables <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("other vegetables"), default ="lhs"))
inspect(vegetables[1:10])
#sort by lift
inspect(head(sort(vegetables, by ="lift"),5))
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(milk_beef[1:10])
#sort by lift
inspect(head(sort(milk_beef, by ="lift"),5))
#General rule
gen <-apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.001,
target="rules",minlen=2, maxlen=3))
#General rule
gen <-apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.01,
target="rules",minlen=2, maxlen=3))
#General rule
gen <-apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.01,
target="rules",minlen=2, maxlen=3))
#General rule
gen <-apriori(my_groceries, parameter = list(sup = 0.05, conf = 0.01,
target="rules",minlen=2, maxlen=3))
inspect(gen[1:20])
inspect(gen[1:6])
inspect(head(sort(gen, by ="lift"),5))
source('~/apriori/test 1/most_frequent_items.R')
library(arules)
library(arulesViz)
library(readr)
#changing our data to transactional data
my_groceries <- read.transactions(file.choose(), sep = "\t",header = TRUE, col=NULL)
View(my_groceries)
str(my_groceries)
summary(my_groceries)
#code that counts lists the most frequent items
itms <- itemFrequency(my_groceries, type="absolute")
head(sort(itms, decreasing = TRUE), n=50)
#create your own rule
my_basket <- apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.001,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("soda","yogurt"), default ="lhs"))
inspect(my_basket[1:20])
inspect(head(sort(my_basket, by ="lift"),10))
####rule for other vegetables
vegetables <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("other vegetables"), default ="lhs"))
inspect(vegetables[1:10])
#sort by lift
inspect(head(sort(vegetables, by ="lift"),5))
##tropical fruit
tropical <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("tropical fruit"), default ="lhs"))
inspect(tropical [1:10])
#sort by lift
inspect(head(sort(tropical, by ="lift"),5))
###rule for bee
root_vegetables <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("root vegetables"), default ="lhs"))
inspect(root_vegetables[1:10])
head(sort(itms, decreasing = TRUE), n=50)
#sort by lift
inspect(head(sort(vegetables, by ="lift"),5))
#sort by lift
inspect(head(sort(root_vegetables, by ="lift"),5))
#create your own rule
my_basket <- apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.001,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("soda","yogurt"), default ="lhs"))
inspect(my_basket[1:20])
inspect(head(sort(my_basket, by ="lift"),10))
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(milk_beef[1:10])
#sort by lift
inspect(head(sort(milk_beef, by ="lift"),5))
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(milk_beef[1:10])
#sort by lift
inspect(head(sort(milk_beef, by ="lift"),5))
#code that counts lists the most frequent items
#itms <- itemFrequency(my_groceries, type="absolute")
itms <- itemFrequency(my_groceries)
head(sort(itms, decreasing = TRUE), n=50)
#code that counts lists the most frequent items
#itms <- itemFrequency(my_groceries, type="absolute")
itms <- itemFrequency(my_groceries, topN=20)
#code that counts lists the most frequent items
#itms <- itemFrequency(my_groceries, type="absolute")
itms <- itemFrequency(my_groceries, topN=20)
#code that counts lists the most frequent items
#itms <- itemFrequency(my_groceries, type="absolute")
itms <- itemFrequency(my_groceries,topN=20)
#code that counts lists the most frequent items
#itms <- itemFrequency(my_groceries, type="absolute")
itms <- itemFrequency(my_groceries,topN=20)
#code that counts lists the most frequent items
#itms <- itemFrequency(my_groceries, type="absolute")
itms <- itemFrequencyPlot(my_groceries,topN=20)
library(arules)
library(arulesViz)
library(readr)
#changing our data to transactional data
my_groceries <- read.transactions(file.choose(), sep = "\t",header = TRUE, col=NULL)
View(my_groceries)
#General rule
gen <-apriori(my_groceries, parameter = list(sup = 0.05, conf = 0.01,
target="rules",minlen=2, maxlen=3))
source('~/apriori/test 1/most_frequent_items.R')
#code that counts lists the most frequent items
itms <- itemFrequency(my_groceries, type="absolute")
#General rule
gen <-apriori(my_groceries, parameter = list(sup = 0.05, conf = 0.01,
target="rules",minlen=2, maxlen=3))
####rule for other vegetables
vegetables <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("other vegetables"), default ="lhs"))
inspect(vegetables[1:10])
#sort by lift
inspect(head(sort(vegetables, by ="lift"),5))
###root vegetables
root_vegetables <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("root vegetables"), default ="lhs"))
inspect(root_vegetables[1:10])
#sort by lift
inspect(head(sort(root_vegetables, by ="lift"),5))
##tropical fruit
tropical <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("tropical fruit"), default ="lhs"))
inspect(tropical [1:10])
#sort by lift
inspect(head(sort(tropical, by ="lift"),5))
###rolls burns
buns  <- apriori(my_groceries, parameter = list(sup = 0.0145, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("rolls/buns"), default ="lhs"))
inspect(buns[1:10])
#sort by lift
inspect(head(sort(rolls/buns, by ="lift"),5))
#sort by lift
inspect(head(sort(buns, by ="lift"),5))
#create your own rule
my_basket <- apriori(my_groceries, parameter = list(sup = 0.005, conf = 0.001,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("soda","yogurt"), default ="lhs"))
inspect(my_basket[1:20])
inspect(head(sort(my_basket, by ="lift"),10))
milk_beef <- apriori(my_groceries, parameter = list(sup = 0.0045, conf = 0.2,
target="rules",minlen=2, maxlen=3),
appearance = list(rhs=c("beef","whole milk"), default ="lhs"))
inspect(milk_beef[1:10])
#sort by lift
inspect(head(sort(milk_beef, by ="lift"),5))
itemFrequencyPlot(my_groceries, topN=20)
source('~/apriori/test 1/most_frequent_items.R')
source('~/apriori/test 1/apriori_algorithm.R')
